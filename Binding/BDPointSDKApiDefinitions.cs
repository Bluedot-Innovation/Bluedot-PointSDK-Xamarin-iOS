using System;
using BDPointSDK;
using CoreData;
using CoreGraphics;
using CoreLocation;
using Foundation;
using MapKit;
using ObjCRuntime;
using ObjectiveC;
using UserNotifications;

// @interface BDLocationManager : CLLocationManager
[BaseType(typeof(CLLocationManager))]
interface BDLocationManager
{
	// +(BDLocationManager *)instance;
	[Static]
	[Export("instance")]
	[Verify(MethodToProperty)]
	BDLocationManager Instance { get; }

	// @property (readonly, nonatomic) CLAuthorizationStatus authorizationStatus;
	[Export("authorizationStatus")]
	CLAuthorizationStatus AuthorizationStatus { get; }
}

// @protocol BDPBluedotServiceDelegate <NSObject>
[Protocol, Model(AutoGeneratedName = true)]
[BaseType(typeof(NSObject))]
interface BDPBluedotServiceDelegate
{
	// @optional -(void)locationAuthorizationDidChangeFromPreviousStatus:(CLAuthorizationStatus)previousAuthorizationStatus toNewStatus:(CLAuthorizationStatus)newAuthorizationStatus;
	[Export("locationAuthorizationDidChangeFromPreviousStatus:toNewStatus:")]
	void LocationAuthorizationDidChangeFromPreviousStatus(CLAuthorizationStatus previousAuthorizationStatus, CLAuthorizationStatus newAuthorizationStatus);

	// @optional -(void)lowPowerModeDidChange:(_Bool)isLowPowerMode;
	[Export("lowPowerModeDidChange:")]
	void LowPowerModeDidChange(bool isLowPowerMode);

	// @optional -(void)bluedotServiceDidReceiveError:(NSError *)error;
	[Export("bluedotServiceDidReceiveError:")]
	void BluedotServiceDidReceiveError(NSError error);

	// @optional -(void)accuracyAuthorizationDidChangeFromPreviousAuthorization:(CLAccuracyAuthorization)previousAccuracyAuthorization toNewAuthorization:(CLAccuracyAuthorization)newAccuracyAuthorization;
	[Export("accuracyAuthorizationDidChangeFromPreviousAuthorization:toNewAuthorization:")]
	void AccuracyAuthorizationDidChangeFromPreviousAuthorization(CLAccuracyAuthorization previousAccuracyAuthorization, CLAccuracyAuthorization newAccuracyAuthorization);
}

// @protocol BDPGeoTriggeringEventDelegate <NSObject>
[Protocol, Model(AutoGeneratedName = true)]
[BaseType(typeof(NSObject))]
interface BDPGeoTriggeringEventDelegate
{
	// @optional -(void)didUpdateZoneInfo;
	[Export("didUpdateZoneInfo")]
	void DidUpdateZoneInfo();

	// @optional -(void)didEnterZone:(GeoTriggerEvent * _Nonnull)enterEvent;
	[Export("didEnterZone:")]
	void DidEnterZone(GeoTriggerEvent enterEvent);

	// @optional -(void)didExitZone:(GeoTriggerEvent * _Nonnull)exitEvent;
	[Export("didExitZone:")]
	void DidExitZone(GeoTriggerEvent exitEvent);
}

// @protocol BDPTempoTrackingDelegate <NSObject>
[Protocol, Model(AutoGeneratedName = true)]
[BaseType(typeof(NSObject))]
interface BDPTempoTrackingDelegate
{
	// @optional -(void)tempoTrackingDidExpire;
	[Export("tempoTrackingDidExpire")]
	void TempoTrackingDidExpire();

	// @optional -(void)tempoTrackingDidUpdate:(TempoTrackingUpdate *)tempoUpdate;
	[Export("tempoTrackingDidUpdate:")]
	void TempoTrackingDidUpdate(TempoTrackingUpdate tempoUpdate);

	// @required -(void)didStopTrackingWithError:(NSError *)error;
	[Abstract]
	[Export("didStopTrackingWithError:")]
	void DidStopTrackingWithError(NSError error);
}

// @interface BDZoneInfo : NSObject
[BaseType(typeof(NSObject))]
interface BDZoneInfo
{
	// @property (readonly, copy) NSString * _Nonnull name;
	[Export("name")]
	string Name { get; }

	// @property (readonly, copy) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }

	// @property (readonly, copy) NSString * _Nonnull ID;
	[Export("ID")]
	string ID { get; }

	// @property (readonly, copy) NSSet<BDFenceInfo *> * _Nonnull fences;
	[Export("fences", ArgumentSemantic.Copy)]
	NSSet<BDFenceInfo> Fences { get; }

	// @property (readonly) BOOL checkOut;
	[Export("checkOut")]
	bool CheckOut { get; }

	// @property (readonly, copy) NSDictionary<NSString *,NSString *> * _Nonnull customData;
	[Export("customData", ArgumentSemantic.Copy)]
	NSDictionary<NSString, NSString> CustomData { get; }

	// @property (readonly) Destination * _Nullable destination;
	[NullAllowed, Export("destination")]
	Destination Destination { get; }
}

// @interface BDPointSDK (BDLocationManager)
[Category]
[BaseType(typeof(BDLocationManager))]
interface BDLocationManager_BDPointSDK
{
	// -(void)initializeWithProjectId:(NSString * _Nonnull)projectId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("initializeWithProjectId:completion:")]
	void InitializeWithProjectId(string projectId, Action<NSError> completion);

	// -(BOOL)isInitialized;
	[Export("isInitialized")]
	[Verify(MethodToProperty)]
	bool IsInitialized { get; }

	// -(void)resetWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("resetWithCompletion:")]
	void ResetWithCompletion(Action<NSError> completion);

	[Wrap("WeakTempoTrackingDelegate")]
	BDPTempoTrackingDelegate TempoTrackingDelegate { get; set; }

	// @property id<BDPTempoTrackingDelegate> tempoTrackingDelegate;
	[NullAllowed, Export("tempoTrackingDelegate", ArgumentSemantic.Assign)]
	NSObject WeakTempoTrackingDelegate { get; set; }

	[Wrap("WeakBluedotServiceDelegate")]
	[NullAllowed]
	BDPBluedotServiceDelegate BluedotServiceDelegate { get; set; }

	// @property id<BDPBluedotServiceDelegate> _Nullable bluedotServiceDelegate;
	[NullAllowed, Export("bluedotServiceDelegate", ArgumentSemantic.Assign)]
	NSObject WeakBluedotServiceDelegate { get; set; }

	[Wrap("WeakGeoTriggeringEventDelegate")]
	[NullAllowed]
	BDPGeoTriggeringEventDelegate GeoTriggeringEventDelegate { get; set; }

	// @property id<BDPGeoTriggeringEventDelegate> _Nullable geoTriggeringEventDelegate;
	[NullAllowed, Export("geoTriggeringEventDelegate", ArgumentSemantic.Assign)]
	NSObject WeakGeoTriggeringEventDelegate { get; set; }

	// @property (readonly, nonatomic) NSSet<BDZoneInfo *> * zoneInfos;
	[Export("zoneInfos")]
	NSSet<BDZoneInfo> ZoneInfos { get; }

	// @property (nonatomic) BOOL backgroundLocationAccessForWhileUsing;
	[Export("backgroundLocationAccessForWhileUsing")]
	bool BackgroundLocationAccessForWhileUsing { get; set; }

	// -(void)setZone:(NSString *)zoneId disableByApplication:(BOOL)disable;
	[Export("setZone:disableByApplication:")]
	void SetZone(string zoneId, bool disable);

	// -(void)applicationContainsDisabledZone:(NSString *)zoneId completion:(void (^)(BOOL))completion;
	[Export("applicationContainsDisabledZone:completion:")]
	void ApplicationContainsDisabledZone(string zoneId, Action<bool> completion);

	// -(NSString *)installRef;
	[Export("installRef")]
	[Verify(MethodToProperty)]
	string InstallRef { get; }

	// -(NSString *)sdkVersion;
	[Export("sdkVersion")]
	[Verify(MethodToProperty)]
	string SdkVersion { get; }

	// -(NSDictionary *)customEventMetaData;
	// -(void)setCustomEventMetaData:(NSDictionary *)data;
	[Export("customEventMetaData")]
	[Verify(MethodToProperty)]
	NSDictionary CustomEventMetaData { get; set; }

	// -(void)startGeoTriggeringWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("startGeoTriggeringWithCompletion:")]
	void StartGeoTriggeringWithCompletion(Action<NSError> completion);

	// -(void)startGeoTriggeringWithAppRestartNotificationTitle:(NSString * _Nonnull)notificationTitle notificationButtonText:(NSString * _Nonnull)notificationButtonText completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("startGeoTriggeringWithAppRestartNotificationTitle:notificationButtonText:completion:")]
	void StartGeoTriggeringWithAppRestartNotificationTitle(string notificationTitle, string notificationButtonText, Action<NSError> completion);

	// -(BOOL)isGeoTriggeringRunning;
	[Export("isGeoTriggeringRunning")]
	[Verify(MethodToProperty)]
	bool IsGeoTriggeringRunning { get; }

	// -(void)stopGeoTriggeringWithCompletion:(void (^ _Nullable)(NSError * _Nullable))completion;
	[Export("stopGeoTriggeringWithCompletion:")]
	void StopGeoTriggeringWithCompletion([NullAllowed] Action<NSError> completion);

	// -(void)startTempoTrackingWithDestinationId:(NSString * _Nonnull)destinationId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("startTempoTrackingWithDestinationId:completion:")]
	void StartTempoTrackingWithDestinationId(string destinationId, Action<NSError> completion);

	// -(void)stopTempoTrackingWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
	[Export("stopTempoTrackingWithCompletion:")]
	void StopTempoTrackingWithCompletion(Action<NSError> completion);

	// -(BOOL)isTempoRunning;
	[Export("isTempoRunning")]
	[Verify(MethodToProperty)]
	bool IsTempoRunning { get; }
}

// @protocol BDPDeepCopy <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
[BaseType(typeof(NSObject))]
interface BDPDeepCopy
{
	// @required -(id)deepCopy;
	[Abstract]
	[Export("deepCopy")]
	[Verify(MethodToProperty)]
	NSObject DeepCopy { get; }
}

// @protocol BDPGeometry <BDPDeepCopy>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
interface BDPGeometry : IBDPDeepCopy
{
	// @required -(BOOL)intersects:(BDGeometry *)geometry;
	[Abstract]
	[Export("intersects:")]
	bool Intersects(BDGeometry geometry);

	// @required -(BOOL)isEnclosedBy:(BDGeometry *)geometry;
	[Abstract]
	[Export("isEnclosedBy:")]
	bool IsEnclosedBy(BDGeometry geometry);

	// @required -(BDBoundingBox *)boundingBox;
	[Abstract]
	[Export("boundingBox")]
	[Verify(MethodToProperty)]
	BDBoundingBox BoundingBox { get; }

	// @required -(BDPoint *)centroid;
	[Abstract]
	[Export("centroid")]
	[Verify(MethodToProperty)]
	BDPoint Centroid { get; }

	// @required -(BDLocationDistance)distanceTo:(BDGeometry *)geometry;
	[Abstract]
	[Export("distanceTo:")]
	double DistanceTo(BDGeometry geometry);

	// @required -(BDGeometryType)geometryType;
	[Abstract]
	[Export("geometryType")]
	[Verify(MethodToProperty)]
	string GeometryType { get; }
}

// @protocol BDPJSONSerializable <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
[BaseType(typeof(NSObject))]
interface BDPJSONSerializable
{
	// @required -(NSDictionary * _Nullable)dictionaryRepresentation;
	[Abstract]
	[NullAllowed, Export("dictionaryRepresentation")]
	[Verify(MethodToProperty)]
	NSDictionary DictionaryRepresentation { get; }
}

// @protocol BDPJSONDeserializable <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
[BaseType(typeof(NSObject))]
interface BDPJSONDeserializable
{
	// @required -(instancetype _Nonnull)initWithDictionary:(NSDictionary * _Nonnull)dictionary;
	[Abstract]
	[Export("initWithDictionary:")]
	NativeHandle Constructor(NSDictionary dictionary);
}

[Static]
[Verify(ConstantsInterfaceAssociation)]
partial interface Constants
{
	// extern const BDGeometryType BDGeometryTypeBoundingBox;
	[Field("BDGeometryTypeBoundingBox", "__Internal")]
	NSString BDGeometryTypeBoundingBox { get; }

	// extern const BDGeometryType BDGeometryTypeCircle;
	[Field("BDGeometryTypeCircle", "__Internal")]
	NSString BDGeometryTypeCircle { get; }

	// extern const BDGeometryType BDGeometryTypeLineString;
	[Field("BDGeometryTypeLineString", "__Internal")]
	NSString BDGeometryTypeLineString { get; }

	// extern const BDGeometryType BDGeometryTypePoint;
	[Field("BDGeometryTypePoint", "__Internal")]
	NSString BDGeometryTypePoint { get; }

	// extern const BDGeometryType BDGeometryTypePolygon;
	[Field("BDGeometryTypePolygon", "__Internal")]
	NSString BDGeometryTypePolygon { get; }
}

// @interface BDGeometry : NSObject <BDPGeometry, BDPJSONSerializable, BDPJSONDeserializable>
[BaseType(typeof(NSObject))]
interface BDGeometry : IBDPGeometry, IBDPJSONSerializable, IBDPJSONDeserializable
{
}

// @protocol BDPValidatable <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
[BaseType(typeof(NSObject))]
interface BDPValidatable
{
	// @required -(BOOL)valid;
	[Abstract]
	[Export("valid")]
	[Verify(MethodToProperty)]
	bool Valid { get; }
}

// @interface BDBoundingBox : BDGeometry <NSCopying, BDPValidatable, NSSecureCoding>
[BaseType(typeof(BDGeometry))]
interface BDBoundingBox : INSCopying, IBDPValidatable, INSSecureCoding
{
	// -(instancetype)initWithNorth:(BDLocationDegrees)north west:(BDLocationDegrees)west south:(BDLocationDegrees)south east:(BDLocationDegrees)east;
	[Export("initWithNorth:west:south:east:")]
	NativeHandle Constructor(double north, double west, double south, double east);

	// -(instancetype)initWithNorthEast:(BDPoint *)northEast southWest:(BDPoint *)southWest;
	[Export("initWithNorthEast:southWest:")]
	NativeHandle Constructor(BDPoint northEast, BDPoint southWest);

	// -(instancetype)initWithCoordinateRegion:(MKCoordinateRegion)region;
	[Export("initWithCoordinateRegion:")]
	NativeHandle Constructor(MKCoordinateRegion region);

	// -(MKCoordinateRegion)coordinateRegion;
	[Export("coordinateRegion")]
	[Verify(MethodToProperty)]
	MKCoordinateRegion CoordinateRegion { get; }

	// -(BDLocationDegrees)west;
	// -(void)setWest:(BDLocationDegrees)west;
	[Export("west")]
	[Verify(MethodToProperty)]
	double West { get; set; }

	// -(BDLocationDegrees)north;
	// -(void)setNorth:(BDLocationDegrees)north;
	[Export("north")]
	[Verify(MethodToProperty)]
	double North { get; set; }

	// -(BDLocationDegrees)east;
	// -(void)setEast:(BDLocationDegrees)east;
	[Export("east")]
	[Verify(MethodToProperty)]
	double East { get; set; }

	// -(BDLocationDegrees)south;
	// -(void)setSouth:(BDLocationDegrees)south;
	[Export("south")]
	[Verify(MethodToProperty)]
	double South { get; set; }

	// -(BDLocationDegrees)longitudeSpan;
	[Export("longitudeSpan")]
	[Verify(MethodToProperty)]
	double LongitudeSpan { get; }

	// -(BDLocationDegrees)latitudeSpan;
	[Export("latitudeSpan")]
	[Verify(MethodToProperty)]
	double LatitudeSpan { get; }

	// @property (nonatomic) BDPoint * northEast;
	[Export("northEast", ArgumentSemantic.Assign)]
	BDPoint NorthEast { get; set; }

	// @property (nonatomic) BDPoint * southWest;
	[Export("southWest", ArgumentSemantic.Assign)]
	BDPoint SouthWest { get; set; }

	// -(NSArray *)vertices;
	[Export("vertices")]
	[Verify(MethodToProperty), Verify(StronglyTypedNSArray)]
	NSObject[] Vertices { get; }
}

// @interface BDCircle : BDGeometry <NSSecureCoding>
[BaseType(typeof(BDGeometry))]
interface BDCircle : INSSecureCoding
{
	// @property (nonatomic) BDPoint * center;
	[Export("center", ArgumentSemantic.Assign)]
	BDPoint Center { get; set; }

	// @property (nonatomic) BDLocationDistance radius;
	[Export("radius")]
	double Radius { get; set; }

	// -(instancetype)initWithCenter:(BDPoint *)center radius:(BDLocationDistance)radius;
	[Export("initWithCenter:radius:")]
	NativeHandle Constructor(BDPoint center, double radius);

	// +(BDCircle *)circleWithCenter:(BDPoint *)center radius:(BDLocationDistance)radius;
	[Static]
	[Export("circleWithCenter:radius:")]
	BDCircle CircleWithCenter(BDPoint center, double radius);

	// -(BOOL)isEqualToCircle:(BDCircle *)circle;
	[Export("isEqualToCircle:")]
	bool IsEqualToCircle(BDCircle circle);
}

// @interface BDPoint : BDGeometry <NSCopying, NSSecureCoding>
[BaseType(typeof(BDGeometry))]
interface BDPoint : INSCopying, INSSecureCoding
{
	// +(instancetype)pointWithLongitude:(BDLocationDegrees)longitude latitude:(BDLocationDegrees)latitude;
	[Static]
	[Export("pointWithLongitude:latitude:")]
	BDPoint PointWithLongitude(double longitude, double latitude);

	// -(instancetype)initWithLongitude:(BDLocationDegrees)longitude latitude:(BDLocationDegrees)latitude;
	[Export("initWithLongitude:latitude:")]
	NativeHandle Constructor(double longitude, double latitude);

	// -(instancetype)initWithCoordinate:(BDLocationCoordinate2D)coordinate;
	[Export("initWithCoordinate:")]
	NativeHandle Constructor(BDLocationCoordinate2D coordinate);

	// -(NSString *)latitudeString;
	[Export("latitudeString")]
	[Verify(MethodToProperty)]
	string LatitudeString { get; }

	// -(NSString *)longitudeString;
	[Export("longitudeString")]
	[Verify(MethodToProperty)]
	string LongitudeString { get; }

	// @property (nonatomic) BDLocationDegrees longitude;
	[Export("longitude")]
	double Longitude { get; set; }

	// @property (nonatomic) BDLocationDegrees latitude;
	[Export("latitude")]
	double Latitude { get; set; }

	// @property (readonly, nonatomic) BDLocationCoordinate2D coordinate;
	[Export("coordinate")]
	BDLocationCoordinate2D Coordinate { get; }

	// -(CGPoint)cgPoint;
	[Export("cgPoint")]
	[Verify(MethodToProperty)]
	CGPoint CgPoint { get; }

	// -(BOOL)isEqualToPoint:(BDPoint *)point;
	[Export("isEqualToPoint:")]
	bool IsEqualToPoint(BDPoint point);

	// -(BOOL)isOrigin;
	[Export("isOrigin")]
	[Verify(MethodToProperty)]
	bool IsOrigin { get; }
}

// @interface BDPolygonal : BDGeometry
[BaseType(typeof(BDGeometry))]
interface BDPolygonal
{
	// -(NSUInteger)vertexCount;
	[Export("vertexCount")]
	[Verify(MethodToProperty)]
	nuint VertexCount { get; }

	// -(void)addVertex:(BDPoint *)vertex;
	[Export("addVertex:")]
	void AddVertex(BDPoint vertex);

	// @property (nonatomic) NSMutableArray * vertices;
	[Export("vertices", ArgumentSemantic.Assign)]
	NSMutableArray Vertices { get; set; }

	// -(BOOL)isClosed;
	[Export("isClosed")]
	[Verify(MethodToProperty)]
	bool IsClosed { get; }
}

// @interface BDLineString : BDPolygonal <NSSecureCoding>
[BaseType(typeof(BDPolygonal))]
interface BDLineString : INSSecureCoding
{
	// +(instancetype)lineStringWithVertices:(NSArray *)vertices copy:(BOOL)copy;
	[Static]
	[Export("lineStringWithVertices:copy:")]
	[Verify(StronglyTypedNSArray)]
	BDLineString LineStringWithVertices(NSObject[] vertices, bool copy);

	// +(instancetype)lineWithStart:(BDPoint *)start end:(BDPoint *)end;
	[Static]
	[Export("lineWithStart:end:")]
	BDLineString LineWithStart(BDPoint start, BDPoint end);

	// -(instancetype)initWithVertices:(NSArray *)vertices copy:(BOOL)copy;
	[Export("initWithVertices:copy:")]
	[Verify(StronglyTypedNSArray)]
	NativeHandle Constructor(NSObject[] vertices, bool copy);

	// -(instancetype)initWithStart:(BDPoint *)start end:(BDPoint *)end;
	[Export("initWithStart:end:")]
	NativeHandle Constructor(BDPoint start, BDPoint end);

	// @property (nonatomic) BDPoint * start;
	[Export("start", ArgumentSemantic.Assign)]
	BDPoint Start { get; set; }

	// @property (nonatomic) BDPoint * end;
	[Export("end", ArgumentSemantic.Assign)]
	BDPoint End { get; set; }
}

// @interface BDPolygon : BDPolygonal <NSSecureCoding>
[BaseType(typeof(BDPolygonal))]
interface BDPolygon : INSSecureCoding
{
	// +(instancetype)polygonWithVertices:(NSArray *)vertices copy:(BOOL)copy;
	[Static]
	[Export("polygonWithVertices:copy:")]
	[Verify(StronglyTypedNSArray)]
	BDPolygon PolygonWithVertices(NSObject[] vertices, bool copy);

	// +(instancetype)polygonWithLatLongCoordinates:(NSNumber *)scalar, ...;
	[Static, Internal]
	[Export("polygonWithLatLongCoordinates:", IsVariadic = true)]
	BDPolygon PolygonWithLatLongCoordinates(NSNumber scalar, IntPtr varArgs);
}

// @interface BDLocation : NSObject <BDPDeepCopy>
[BaseType(typeof(NSObject))]
interface BDLocation : IBDPDeepCopy
{
	// -(instancetype)initWithCLLocation:(CLLocation *)coreLocation;
	[Export("initWithCLLocation:")]
	NativeHandle Constructor(CLLocation coreLocation);

	// -(instancetype)initWithLatitude:(BDLocationDegrees)latitude longitude:(BDLocationDegrees)longitude altitude:(BDLocationDistance)altitude accuracy:(BDLocationAccuracy)accuracy altitudeAccuracy:(BDLocationAccuracy)altitudeAccuracy speed:(BDLocationSpeed)speed bearing:(BDLocationDirection)bearing;
	[Export("initWithLatitude:longitude:altitude:accuracy:altitudeAccuracy:speed:bearing:")]
	NativeHandle Constructor(double latitude, double longitude, double altitude, double accuracy, double altitudeAccuracy, double speed, double bearing);

	// @property (nonatomic) BDLocationAccuracy accuracy;
	[Export("accuracy")]
	double Accuracy { get; set; }

	// @property (nonatomic) BDLocationAccuracy altitudeAccuracy;
	[Export("altitudeAccuracy")]
	double AltitudeAccuracy { get; set; }

	// @property (nonatomic) BDPoint * point;
	[Export("point", ArgumentSemantic.Assign)]
	BDPoint Point { get; set; }

	// @property (nonatomic) BDLocationDistance altitude;
	[Export("altitude")]
	double Altitude { get; set; }

	// @property (nonatomic) BDLocationSpeed speed;
	[Export("speed")]
	double Speed { get; set; }

	// @property (nonatomic) BDLocationDirection bearing;
	[Export("bearing")]
	double Bearing { get; set; }

	// @property (readonly, nonatomic) NSString * provider;
	[Export("provider")]
	string Provider { get; }

	// @property (nonatomic) NSDate * timestamp;
	[Export("timestamp", ArgumentSemantic.Assign)]
	NSDate Timestamp { get; set; }

	// -(BOOL)isEqualToLocation:(BDLocation *)location;
	[Export("isEqualToLocation:")]
	bool IsEqualToLocation(BDLocation location);
}

// @protocol BDPSpatialObject <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
[BaseType(typeof(NSObject))]
interface BDPSpatialObject
{
	// @required -(BDGeometry *)geometry;
	[Abstract]
	[Export("geometry")]
	[Verify(MethodToProperty)]
	BDGeometry Geometry { get; }
}

// @protocol BDPSpatialObjectInfo <BDPSpatialObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
interface BDPSpatialObjectInfo : IBDPSpatialObject
{
	// @required @property (readonly, copy) NSString * name;
	[Abstract]
	[Export("name")]
	string Name { get; }

	// @required @property (readonly, copy) NSString * description;
	[Abstract]
	[Export("description")]
	string Description { get; }

	// @required @property (readonly, copy) NSString * ID;
	[Abstract]
	[Export("ID")]
	string ID { get; }

	// @required @property (readonly) BDGeometry * geometry;
	[Abstract]
	[Export("geometry")]
	BDGeometry Geometry { get; }
}

// @interface BDFenceInfo : NSObject <BDPSpatialObjectInfo, NSSecureCoding>
[BaseType(typeof(NSObject))]
interface BDFenceInfo : IBDPSpatialObjectInfo, INSSecureCoding
{
	// @property (readonly, copy) NSString * name;
	[Export("name")]
	string Name { get; }

	// @property (readonly, copy) NSString * description;
	[Export("description")]
	string Description { get; }

	// @property (readonly, copy) NSString * ID;
	[Export("ID")]
	string ID { get; }

	// @property (readonly) BDGeometry * geometry;
	[Export("geometry")]
	BDGeometry Geometry { get; }
}

// @interface BDLocationInfo : NSObject
[BaseType(typeof(NSObject))]
interface BDLocationInfo
{
	// @property (readonly, copy) NSDate * timestamp;
	[Export("timestamp", ArgumentSemantic.Copy)]
	NSDate Timestamp { get; }

	// @property (readonly) BDLocationDegrees latitude;
	[Export("latitude")]
	double Latitude { get; }

	// @property (readonly) BDLocationDegrees longitude;
	[Export("longitude")]
	double Longitude { get; }

	// @property (readonly) BDLocationDirection bearing;
	[Export("bearing")]
	double Bearing { get; }

	// @property (readonly) BDLocationSpeed speed;
	[Export("speed")]
	double Speed { get; }
}

// @interface BDPointSessionException : NSException
[BaseType(typeof(NSException))]
interface BDPointSessionException
{
	// +(NSException *)exceptionWithReason:(NSString *)reason;
	[Static]
	[Export("exceptionWithReason:")]
	NSException ExceptionWithReason(string reason);
}

// @protocol BDPNamedDescribed
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol]
interface BDPNamedDescribed
{
	// @required @property (copy) NSString * name;
	[Abstract]
	[Export("name")]
	string Name { get; set; }

	// @required @property (readwrite, copy) NSString * description;
	[Abstract]
	[Export("description")]
	string Description { get; set; }
}

// @interface AppInfo : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK7AppInfo")]
[DisableDefaultCtor]
interface AppInfo
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull appBuildVersion;
	[Export("appBuildVersion")]
	string AppBuildVersion { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull minimumOSVersion;
	[Export("minimumOSVersion")]
	string MinimumOSVersion { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull customerApplicationId;
	[Export("customerApplicationId")]
	string CustomerApplicationId { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull sdkVersion;
	[Export("sdkVersion")]
	string SdkVersion { get; }

	// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nonnull customEventMetaData;
	[Export("customEventMetaData", ArgumentSemantic.Copy)]
	NSDictionary<NSString, NSString> CustomEventMetaData { get; }

	// -(instancetype _Nonnull)initWithMetaData:(NSDictionary<NSString *,NSString *> * _Nonnull)metaData;
	[Export("initWithMetaData:")]
	NativeHandle Constructor(NSDictionary<NSString, NSString> metaData);
}

// @protocol JsonString <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK10JsonString_")]
[BaseType(typeof(NSObject), Name = "_TtP10BDPointSDK10JsonString_")]
interface JsonString
{
	// @required -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Abstract]
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_305 (AppInfo) <JsonString>
[Category]
[BaseType(typeof(AppInfo))]
interface AppInfo_BDPointSDK_Swift_305 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_312 (AppInfo)
[Category]
[BaseType(typeof(AppInfo))]
interface AppInfo_BDPointSDK_Swift_312
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_336 (AppInfo) <Persistable>
[Category]
[BaseType(typeof(AppInfo))]
interface AppInfo_BDPointSDK_Swift_336 : IPersistable
{
	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface AppRestartNotificationConfiguration : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK35AppRestartNotificationConfiguration")]
interface AppRestartNotificationConfiguration
{
	// @property (readonly, nonatomic) BOOL requiresAppRestartNotification;
	[Export("requiresAppRestartNotification")]
	bool RequiresAppRestartNotification { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nullable appRestartNotificationTitle;
	[NullAllowed, Export("appRestartNotificationTitle")]
	string AppRestartNotificationTitle { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nullable appRestartNotificationButtonText;
	[NullAllowed, Export("appRestartNotificationButtonText")]
	string AppRestartNotificationButtonText { get; }

	// -(void)disable;
	[Export("disable")]
	void Disable();

	// -(void)enableWithNotificationTitle:(NSString * _Nullable)notificationTitle notificationButtonText:(NSString * _Nullable)notificationButtonText;
	[Export("enableWithNotificationTitle:notificationButtonText:")]
	void EnableWithNotificationTitle([NullAllowed] string notificationTitle, [NullAllowed] string notificationButtonText);
}

// @interface AppState : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK8AppState")]
[DisableDefaultCtor]
interface AppState
{
	// @property (readonly, nonatomic) NSDecimal batteryLevel;
	[Export("batteryLevel")]
	NSDecimal BatteryLevel { get; }

	// @property (readonly, nonatomic) BOOL blueBarEnabled;
	[Export("blueBarEnabled")]
	bool BlueBarEnabled { get; }

	// @property (readonly, copy, nonatomic) NSDate * _Nullable lastRuleDownload;
	[NullAllowed, Export("lastRuleDownload", ArgumentSemantic.Copy)]
	NSDate LastRuleDownload { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull locationPermission;
	[Export("locationPermission")]
	string LocationPermission { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull notificationPermission;
	[Export("notificationPermission")]
	string NotificationPermission { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull viewState;
	[Export("viewState")]
	string ViewState { get; }

	// -(instancetype _Nonnull)initWithLastRuleDownload:(NSDate * _Nullable)lastRuleDownload osRestrictions:(NSArray<NSString *> * _Nonnull)osRestrictions;
	[Export("initWithLastRuleDownload:osRestrictions:")]
	NativeHandle Constructor([NullAllowed] NSDate lastRuleDownload, string[] osRestrictions);
}

// @interface BDPointSDK_Swift_378 (AppState) <JsonString>
[Category]
[BaseType(typeof(AppState))]
interface AppState_BDPointSDK_Swift_378 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_385 (AppState) <NSCopying>
[Category]
[BaseType(typeof(AppState))]
interface AppState_BDPointSDK_Swift_385 : INSCopying
{
	// -(id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone __attribute__((warn_unused_result("")));
	[Export("copyWithZone:")]
	unsafe NSObject CopyWithZone([NullAllowed] _NSZone* zone);
}

// @interface BDPointSDK_Swift_390 (AppState)
[Category]
[BaseType(typeof(AppState))]
interface AppState_BDPointSDK_Swift_390
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_396 (AppState) <Persistable>
[Category]
[BaseType(typeof(AppState))]
interface AppState_BDPointSDK_Swift_396 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface BDPointSDK_Swift_404 (BDLocationManager)
[Category]
[BaseType(typeof(BDLocationManager))]
interface BDLocationManager_BDPointSDK_Swift_404
{
	// -(void)authorizationChangedWithManager:(CLLocationManager * _Nonnull)manager status:(CLAuthorizationStatus)status;
	[Export("authorizationChangedWithManager:status:")]
	void AuthorizationChangedWithManager(CLLocationManager manager, CLAuthorizationStatus status);
}

// @interface BDPointSDK_Swift_413 (CLCircularRegion)
[Category]
[BaseType(typeof(CLCircularRegion))]
interface CLCircularRegion_BDPointSDK_Swift_413
{
	// -(BOOL)isEqualToCircularRegion:(CLCircularRegion * _Nonnull)circularRegion __attribute__((warn_unused_result("")));
	[Export("isEqualToCircularRegion:")]
	bool IsEqualToCircularRegion(CLCircularRegion circularRegion);
}

// @interface BDPointSDK_Swift_421 (CLLocation)
[Category]
[BaseType(typeof(CLLocation))]
interface CLLocation_BDPointSDK_Swift_421
{
	// -(instancetype _Nonnull)initWithLocation:(BDLocation * _Nonnull)location;
	[Export("initWithLocation:")]
	NativeHandle Constructor(BDLocation location);

	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @protocol Checkout <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK8Checkout_")]
[BaseType(typeof(NSObject), Name = "_TtP10BDPointSDK8Checkout_")]
interface Checkout
{
	// @required @property (readonly, nonatomic) NSTimeInterval dwellTime;
	[Abstract]
	[Export("dwellTime")]
	double DwellTime { get; }
}

// @interface CrossedFence : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK12CrossedFence")]
[DisableDefaultCtor]
interface CrossedFence
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull fenceId;
	[Export("fenceId")]
	string FenceId { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull fenceName;
	[Export("fenceName")]
	string FenceName { get; }

	// @property (readonly, copy, nonatomic) NSDate * _Nonnull crossTime;
	[Export("crossTime", ArgumentSemantic.Copy)]
	NSDate CrossTime { get; }

	// @property (readonly, nonatomic, strong) CLLocation * _Nonnull location;
	[Export("location", ArgumentSemantic.Strong)]
	CLLocation Location { get; }

	// -(instancetype _Nonnull)initWithFenceId:(NSString * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName location:(CLLocation * _Nonnull)location crossTime:(NSDate * _Nonnull)crossTime __attribute__((objc_designated_initializer));
	[Export("initWithFenceId:fenceName:location:crossTime:")]
	[DesignatedInitializer]
	NativeHandle Constructor(string fenceId, string fenceName, CLLocation location, NSDate crossTime);
}

// @interface BDPointSDK_Swift_466 (CrossedFence) <JsonString>
[Category]
[BaseType(typeof(CrossedFence))]
interface CrossedFence_BDPointSDK_Swift_466 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_473 (CrossedFence) <NSCopying>
[Category]
[BaseType(typeof(CrossedFence))]
interface CrossedFence_BDPointSDK_Swift_473 : INSCopying
{
	// -(id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone __attribute__((warn_unused_result("")));
	[Export("copyWithZone:")]
	unsafe NSObject CopyWithZone([NullAllowed] _NSZone* zone);
}

// @interface BDPointSDK_Swift_485 (CrossedFence)
[Category]
[BaseType(typeof(CrossedFence))]
interface CrossedFence_BDPointSDK_Swift_485
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }

	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);

	// @property (readonly, nonatomic) NSUInteger hash;
	[Export("hash")]
	nuint Hash { get; }
}

// @interface Destination : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK11Destination")]
[DisableDefaultCtor]
interface Destination
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull destinationId;
	[Export("destinationId")]
	string DestinationId { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nullable name;
	[NullAllowed, Export("name")]
	string Name { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nullable address;
	[NullAllowed, Export("address")]
	string Address { get; }

	// @property (readonly, nonatomic, strong) BDPoint * _Nonnull location;
	[Export("location", ArgumentSemantic.Strong)]
	BDPoint Location { get; }

	// -(instancetype _Nonnull)initWithDestinationId:(NSString * _Nonnull)destinationId name:(NSString * _Nullable)name address:(NSString * _Nullable)address location:(BDPoint * _Nonnull)location __attribute__((objc_designated_initializer));
	[Export("initWithDestinationId:name:address:location:")]
	[DesignatedInitializer]
	NativeHandle Constructor(string destinationId, [NullAllowed] string name, [NullAllowed] string address, BDPoint location);

	// -(instancetype _Nonnull)initWithDestination:(Destination * _Nonnull)destination;
	[Export("initWithDestination:")]
	NativeHandle Constructor(Destination destination);

	// -(instancetype _Nullable)initWithDictionary:(NSDictionary * _Nonnull)dictionary error:(NSError * _Nullable * _Nullable)error;
	[Export("initWithDictionary:error:")]
	NativeHandle Constructor(NSDictionary dictionary, [NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_584 (Destination) <JsonString>
[Category]
[BaseType(typeof(Destination))]
interface Destination_BDPointSDK_Swift_584 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_592 (Destination) <BDPJSONSerializable>
[Category]
[BaseType(typeof(Destination))]
interface Destination_BDPointSDK_Swift_592 : IBDPJSONSerializable
{
	// -(NSDictionary * _Nullable)dictionaryRepresentation __attribute__((warn_unused_result("")));
	[NullAllowed, Export("dictionaryRepresentation")]
	[Verify(MethodToProperty)]
	NSDictionary DictionaryRepresentation { get; }
}

// @interface BDPointSDK_Swift_597 (Destination)
[Category]
[BaseType(typeof(Destination))]
interface Destination_BDPointSDK_Swift_597
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }

	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface DeviceInfo : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK10DeviceInfo")]
[DisableDefaultCtor]
interface DeviceInfo
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull deviceType;
	[Export("deviceType")]
	string DeviceType { get; }

	// @property (readonly, nonatomic, strong) OperatingSystemInfo * _Nonnull osInfo;
	[Export("osInfo", ArgumentSemantic.Strong)]
	OperatingSystemInfo OsInfo { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nullable advertisingId;
	[NullAllowed, Export("advertisingId")]
	string AdvertisingId { get; }
}

// @interface BDPointSDK_Swift_618 (DeviceInfo) <JsonString>
[Category]
[BaseType(typeof(DeviceInfo))]
interface DeviceInfo_BDPointSDK_Swift_618 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_625 (DeviceInfo)
[Category]
[BaseType(typeof(DeviceInfo))]
interface DeviceInfo_BDPointSDK_Swift_625
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_631 (DeviceInfo) <Persistable>
[Category]
[BaseType(typeof(DeviceInfo))]
interface DeviceInfo_BDPointSDK_Swift_631 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @protocol Event <NSObject>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK5Event_")]
[BaseType(typeof(NSObject), Name = "_TtP10BDPointSDK5Event_")]
interface Event
{
	// @required @property (readonly, nonatomic) enum EventType eventType;
	[Abstract]
	[Export("eventType")]
	EventType EventType { get; }

	// @required @property (readonly, copy, nonatomic) NSDate * _Nonnull eventTime;
	[Abstract]
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; }

	// @required @property (readonly, copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Abstract]
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; }

	// @required @property (readonly, nonatomic) enum TriggerEngine triggerEngine;
	[Abstract]
	[Export("triggerEngine")]
	TriggerEngine TriggerEngine { get; }

	// @required @property (readonly, nonatomic, strong) AppState * _Nonnull appState;
	[Abstract]
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; }
}

// @interface FenceEntered : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK12FenceEntered")]
[DisableDefaultCtor]
interface FenceEntered
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (readonly, copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull fenceName;
	[Export("fenceName")]
	string FenceName { get; }

	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull fenceId;
	[Export("fenceId", ArgumentSemantic.Copy)]
	NSUuid FenceId { get; }

	// @property (readonly, copy, nonatomic) NSArray<CLLocation *> * _Nonnull locations;
	[Export("locations", ArgumentSemantic.Copy)]
	CLLocation[] Locations { get; }

	// @property (readonly, nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; }

	// @property (readonly, copy, nonatomic) NSArray<CrossedFence *> * _Nullable crossedFences;
	[NullAllowed, Export("crossedFences", ArgumentSemantic.Copy)]
	CrossedFence[] CrossedFences { get; }

	// @property (readonly, nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine")]
	TriggerEngine TriggerEngine { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; }

	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; }

	// -(instancetype _Nonnull)initWithFenceId:(NSUUID * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName eventTime:(NSDate * _Nonnull)eventTime locations:(NSArray<CLLocation *> * _Nonnull)locations appState:(AppState * _Nonnull)appState crossedFences:(NSArray<CrossedFence *> * _Nullable)crossedFences;
	[Export("initWithFenceId:fenceName:eventTime:locations:appState:crossedFences:")]
	NativeHandle Constructor(NSUuid fenceId, string fenceName, NSDate eventTime, CLLocation[] locations, AppState appState, [NullAllowed] CrossedFence[] crossedFences);
}

// @protocol TriggerEvent <Event, NSCopying>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK12TriggerEvent_")]
interface TriggerEvent : IEvent, INSCopying
{
	// @required @property (readonly, copy, nonatomic) NSString * _Nonnull fenceName;
	[Abstract]
	[Export("fenceName")]
	string FenceName { get; }

	// @required @property (readonly, copy, nonatomic) NSUUID * _Nonnull fenceId;
	[Abstract]
	[Export("fenceId", ArgumentSemantic.Copy)]
	NSUuid FenceId { get; }

	// @required @property (readonly, copy, nonatomic) NSArray<CLLocation *> * _Nonnull locations;
	[Abstract]
	[Export("locations", ArgumentSemantic.Copy)]
	CLLocation[] Locations { get; }

	// @required @property (readonly, copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Abstract]
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; }
}

// @interface BDPointSDK_Swift_736 (FenceEntered) <TriggerEvent>
[Category]
[BaseType(typeof(FenceEntered))]
interface FenceEntered_BDPointSDK_Swift_736 : ITriggerEvent
{
}

// @interface BDPointSDK_Swift_741 (FenceEntered) <JsonString>
[Category]
[BaseType(typeof(FenceEntered))]
interface FenceEntered_BDPointSDK_Swift_741 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_748 (FenceEntered) <NSCopying>
[Category]
[BaseType(typeof(FenceEntered))]
interface FenceEntered_BDPointSDK_Swift_748 : INSCopying
{
	// -(id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone __attribute__((warn_unused_result("")));
	[Export("copyWithZone:")]
	unsafe NSObject CopyWithZone([NullAllowed] _NSZone* zone);
}

// @interface BDPointSDK_Swift_753 (FenceEntered)
[Category]
[BaseType(typeof(FenceEntered))]
interface FenceEntered_BDPointSDK_Swift_753
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_758 (FenceEntered) <Persistable>
[Category]
[BaseType(typeof(FenceEntered))]
interface FenceEntered_BDPointSDK_Swift_758 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface FenceExited : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK11FenceExited")]
[DisableDefaultCtor]
interface FenceExited
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (readonly, copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull fenceName;
	[Export("fenceName")]
	string FenceName { get; }

	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull fenceId;
	[Export("fenceId", ArgumentSemantic.Copy)]
	NSUuid FenceId { get; }

	// @property (readonly, copy, nonatomic) NSArray<CLLocation *> * _Nonnull locations;
	[Export("locations", ArgumentSemantic.Copy)]
	CLLocation[] Locations { get; }

	// @property (readonly, nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; }

	// @property (readonly, nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine")]
	TriggerEngine TriggerEngine { get; }

	// @property (readonly, nonatomic) float distance;
	[Export("distance")]
	float Distance { get; }

	// @property (readonly, nonatomic) float distanceRequired;
	[Export("distanceRequired")]
	float DistanceRequired { get; }

	// @property (readonly, nonatomic) NSTimeInterval dwellTime;
	[Export("dwellTime")]
	double DwellTime { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; }

	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; }

	// -(instancetype _Nonnull)initWithFenceId:(NSUUID * _Nonnull)fenceId fenceName:(NSString * _Nonnull)fenceName eventTime:(NSDate * _Nonnull)eventTime locations:(NSArray<CLLocation *> * _Nonnull)locations dwellTime:(NSTimeInterval)dwellTime distance:(float)distance distanceRequired:(float)distanceRequired appState:(AppState * _Nonnull)appState;
	[Export("initWithFenceId:fenceName:eventTime:locations:dwellTime:distance:distanceRequired:appState:")]
	NativeHandle Constructor(NSUuid fenceId, string fenceName, NSDate eventTime, CLLocation[] locations, double dwellTime, float distance, float distanceRequired, AppState appState);
}

// @interface BDPointSDK_Swift_809 (FenceExited) <Checkout, TriggerEvent>
[Category]
[BaseType(typeof(FenceExited))]
interface FenceExited_BDPointSDK_Swift_809 : ICheckout, ITriggerEvent
{
}

// @interface BDPointSDK_Swift_813 (FenceExited) <NSCopying>
[Category]
[BaseType(typeof(FenceExited))]
interface FenceExited_BDPointSDK_Swift_813 : INSCopying
{
	// -(id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone __attribute__((warn_unused_result("")));
	[Export("copyWithZone:")]
	unsafe NSObject CopyWithZone([NullAllowed] _NSZone* zone);
}

// @interface BDPointSDK_Swift_818 (FenceExited) <JsonString>
[Category]
[BaseType(typeof(FenceExited))]
interface FenceExited_BDPointSDK_Swift_818 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_826 (FenceExited)
[Category]
[BaseType(typeof(FenceExited))]
interface FenceExited_BDPointSDK_Swift_826
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_831 (FenceExited) <Persistable>
[Category]
[BaseType(typeof(FenceExited))]
interface FenceExited_BDPointSDK_Swift_831 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface GeoTriggerEvent : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK15GeoTriggerEvent")]
[DisableDefaultCtor]
interface GeoTriggerEvent
{
	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull installRef;
	[Export("installRef", ArgumentSemantic.Copy)]
	NSUuid InstallRef { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull projectId;
	[Export("projectId")]
	string ProjectId { get; }

	// @property (readonly, nonatomic, strong) DeviceInfo * _Nonnull deviceInfo;
	[Export("deviceInfo", ArgumentSemantic.Strong)]
	DeviceInfo DeviceInfo { get; }

	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull triggerChainId;
	[Export("triggerChainId", ArgumentSemantic.Copy)]
	NSUuid TriggerChainId { get; }

	// @property (readonly, nonatomic) enum NotificationType notificationType;
	[Export("notificationType")]
	NotificationType NotificationType { get; }

	// @property (readonly, nonatomic, strong) ZoneInfo * _Nonnull zoneInfo;
	[Export("zoneInfo", ArgumentSemantic.Strong)]
	ZoneInfo ZoneInfo { get; }

	// @property (readonly, nonatomic, strong) AppInfo * _Nonnull appInfo;
	[Export("appInfo", ArgumentSemantic.Strong)]
	AppInfo AppInfo { get; }

	// @property (readonly, copy, nonatomic) NSArray<id<TriggerEvent>> * _Nonnull triggerEvents;
	[Export("triggerEvents", ArgumentSemantic.Copy)]
	TriggerEvent[] TriggerEvents { get; }

	// @property (readonly, nonatomic, strong) FenceEntered * _Nullable entryEvent;
	[NullAllowed, Export("entryEvent", ArgumentSemantic.Strong)]
	FenceEntered EntryEvent { get; }

	// @property (readonly, nonatomic, strong) FenceExited * _Nullable exitEvent;
	[NullAllowed, Export("exitEvent", ArgumentSemantic.Strong)]
	FenceExited ExitEvent { get; }
}

// @interface BDPointSDK_Swift_882 (GeoTriggerEvent) <JsonString>
[Category]
[BaseType(typeof(GeoTriggerEvent))]
interface GeoTriggerEvent_BDPointSDK_Swift_882 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_891 (GeoTriggerEvent)
[Category]
[BaseType(typeof(GeoTriggerEvent))]
interface GeoTriggerEvent_BDPointSDK_Swift_891
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }

	// -(instancetype _Nonnull)initWithEventNotification:(TriggerEventNotification * _Nonnull)eventNotification;
	[Export("initWithEventNotification:")]
	NativeHandle Constructor(TriggerEventNotification eventNotification);

	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @protocol LifecycleEvent <Event>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK14LifecycleEvent_")]
interface LifecycleEvent : IEvent
{
	// @required @property (readonly, copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Abstract]
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; }
}

// @interface GeoTriggerStart : NSObject <LifecycleEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK15GeoTriggerStart")]
[DisableDefaultCtor]
interface GeoTriggerStart : ILifecycleEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; set; }

	// -(instancetype _Nonnull)initWithAppState:(AppState * _Nonnull)appState;
	[Export("initWithAppState:")]
	NativeHandle Constructor(AppState appState);
}

// @interface BDPointSDK_Swift_919 (GeoTriggerStart)
[Category]
[BaseType(typeof(GeoTriggerStart))]
interface GeoTriggerStart_BDPointSDK_Swift_919
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_924 (GeoTriggerStart) <Persistable>
[Category]
[BaseType(typeof(GeoTriggerStart))]
interface GeoTriggerStart_BDPointSDK_Swift_924 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface GeoTriggerStop : NSObject <LifecycleEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK14GeoTriggerStop")]
[DisableDefaultCtor]
interface GeoTriggerStop : ILifecycleEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; set; }

	// -(instancetype _Nonnull)initWithAppState:(AppState * _Nonnull)appState;
	[Export("initWithAppState:")]
	NativeHandle Constructor(AppState appState);
}

// @interface BDPointSDK_Swift_946 (GeoTriggerStop)
[Category]
[BaseType(typeof(GeoTriggerStop))]
interface GeoTriggerStop_BDPointSDK_Swift_946
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_951 (GeoTriggerStop) <Persistable>
[Category]
[BaseType(typeof(GeoTriggerStop))]
interface GeoTriggerStop_BDPointSDK_Swift_951 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface LifecycleEventNotification : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK26LifecycleEventNotification")]
[DisableDefaultCtor]
interface LifecycleEventNotification
{
	// -(instancetype _Nonnull)initWithLifecycleEvents:(NSArray<id<LifecycleEvent>> * _Nonnull)lifecycleEvents;
	[Export("initWithLifecycleEvents:")]
	NativeHandle Constructor(LifecycleEvent[] lifecycleEvents);
}

// @interface BDPointSDK_Swift_995 (LifecycleEventNotification)
[Category]
[BaseType(typeof(LifecycleEventNotification))]
interface LifecycleEventNotification_BDPointSDK_Swift_995
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);

	// @property (readonly, copy, nonatomic) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }
}

// @interface BDPointSDK_Swift_1002 (LifecycleEventNotification) <Persistable>
[Category]
[BaseType(typeof(LifecycleEventNotification))]
interface LifecycleEventNotification_BDPointSDK_Swift_1002 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(instancetype _Nonnull)initWithManagedObject:(MOLifecycleEventNotification * _Nonnull)notification;
	[Export("initWithManagedObject:")]
	NativeHandle Constructor(MOLifecycleEventNotification notification);

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface OperatingSystemInfo : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK19OperatingSystemInfo")]
[DisableDefaultCtor]
interface OperatingSystemInfo
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull name;
	[Export("name")]
	string Name { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull version;
	[Export("version")]
	string Version { get; }
}

// @interface BDPointSDK_Swift_1387 (OperatingSystemInfo)
[Category]
[BaseType(typeof(OperatingSystemInfo))]
interface OperatingSystemInfo_BDPointSDK_Swift_1387
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface SdkInit : NSObject <LifecycleEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK7SdkInit")]
[DisableDefaultCtor]
interface SdkInit : ILifecycleEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; set; }

	// -(instancetype _Nonnull)initWithAppState:(AppState * _Nonnull)appState;
	[Export("initWithAppState:")]
	NativeHandle Constructor(AppState appState);
}

// @interface BDPointSDK_Swift_1670 (SdkInit)
[Category]
[BaseType(typeof(SdkInit))]
interface SdkInit_BDPointSDK_Swift_1670
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_1675 (SdkInit) <Persistable>
[Category]
[BaseType(typeof(SdkInit))]
interface SdkInit_BDPointSDK_Swift_1675 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @interface SdkReset : NSObject <LifecycleEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK8SdkReset")]
[DisableDefaultCtor]
interface SdkReset : ILifecycleEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSUUID * _Nonnull uniqueId;
	[Export("uniqueId", ArgumentSemantic.Copy)]
	NSUuid UniqueId { get; set; }

	// -(instancetype _Nonnull)initWithAppState:(AppState * _Nonnull)appState;
	[Export("initWithAppState:")]
	NativeHandle Constructor(AppState appState);
}

// @interface BDPointSDK_Swift_1697 (SdkReset)
[Category]
[BaseType(typeof(SdkReset))]
interface SdkReset_BDPointSDK_Swift_1697
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_1702 (SdkReset) <Persistable>
[Category]
[BaseType(typeof(SdkReset))]
interface SdkReset_BDPointSDK_Swift_1702 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);
}

// @protocol TempoEvent <Event>
/*
	Check whether adding [Model] to this declaration is appropriate.
	[Model] is used to generate a C# class that implements this protocol,
	and might be useful for protocols that consumers are supposed to implement,
	since consumers can subclass the generated class instead of implementing
	the generated interface. If consumers are not supposed to implement this
	protocol, then [Model] is redundant and will generate code that will never
	be used.
*/
[Protocol(Name = "_TtP10BDPointSDK10TempoEvent_")]
interface TempoEvent : IEvent
{
	// @required @property (readonly, copy, nonatomic) NSString * _Nonnull destinationId;
	[Abstract]
	[Export("destinationId")]
	string DestinationId { get; }
}

// @interface TempoStop : NSObject <TempoEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK9TempoStop")]
[DisableDefaultCtor]
interface TempoStop : ITempoEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull destinationId;
	[Export("destinationId")]
	string DestinationId { get; set; }

	// -(instancetype _Nonnull)initWithDestinationId:(NSString * _Nonnull)destinationId stopReason:(enum TempoStopReason)stopReason appState:(AppState * _Nonnull)appState;
	[Export("initWithDestinationId:stopReason:appState:")]
	NativeHandle Constructor(string destinationId, TempoStopReason stopReason, AppState appState);
}

// @interface TempoTrackingUpdate : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK19TempoTrackingUpdate")]
[DisableDefaultCtor]
interface TempoTrackingUpdate
{
}

// @interface BDPointSDK_Swift_1818 (TempoTrackingUpdate) <JsonString>
[Category]
[BaseType(typeof(TempoTrackingUpdate))]
interface TempoTrackingUpdate_BDPointSDK_Swift_1818 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_1826 (TempoTrackingUpdate)
[Category]
[BaseType(typeof(TempoTrackingUpdate))]
interface TempoTrackingUpdate_BDPointSDK_Swift_1826
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull description;
	[Export("description")]
	string Description { get; }

	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface TempoUpdate : NSObject <TempoEvent>
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK11TempoUpdate")]
[DisableDefaultCtor]
interface TempoUpdate : ITempoEvent
{
	// @property (readonly, nonatomic) enum EventType eventType;
	[Export("eventType")]
	EventType EventType { get; }

	// @property (copy, nonatomic) NSDate * _Nonnull eventTime;
	[Export("eventTime", ArgumentSemantic.Copy)]
	NSDate EventTime { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull timeZoneIdentifier;
	[Export("timeZoneIdentifier")]
	string TimeZoneIdentifier { get; set; }

	// @property (nonatomic) enum TriggerEngine triggerEngine;
	[Export("triggerEngine", ArgumentSemantic.Assign)]
	TriggerEngine TriggerEngine { get; set; }

	// @property (nonatomic, strong) AppState * _Nonnull appState;
	[Export("appState", ArgumentSemantic.Strong)]
	AppState AppState { get; set; }

	// @property (copy, nonatomic) NSString * _Nonnull destinationId;
	[Export("destinationId")]
	string DestinationId { get; set; }

	// -(instancetype _Nonnull)initWithLocations:(NSArray<CLLocation *> * _Nonnull)locations destinationId:(NSString * _Nonnull)destinationId appState:(AppState * _Nonnull)appState;
	[Export("initWithLocations:destinationId:appState:")]
	NativeHandle Constructor(CLLocation[] locations, string destinationId, AppState appState);
}

// @interface ZoneInfo : NSObject
[BaseType(typeof(NSObject), Name = "_TtC10BDPointSDK8ZoneInfo")]
[DisableDefaultCtor]
interface ZoneInfo
{
	// @property (readonly, copy, nonatomic) NSUUID * _Nonnull id;
	[Export("id", ArgumentSemantic.Copy)]
	NSUuid Id { get; }

	// @property (readonly, copy, nonatomic) NSString * _Nonnull name;
	[Export("name")]
	string Name { get; }

	// @property (readonly, copy, nonatomic) NSDictionary<NSString *,NSString *> * _Nonnull customData;
	[Export("customData", ArgumentSemantic.Copy)]
	NSDictionary<NSString, NSString> CustomData { get; }

	// -(instancetype _Nonnull)initWithId:(NSUUID * _Nonnull)id name:(NSString * _Nonnull)name customData:(NSDictionary<NSString *,NSString *> * _Nonnull)customData uniqueId:(NSUUID * _Nonnull)uniqueId __attribute__((objc_designated_initializer));
	[Export("initWithId:name:customData:uniqueId:")]
	[DesignatedInitializer]
	NativeHandle Constructor(NSUuid id, string name, NSDictionary<NSString, NSString> customData, NSUuid uniqueId);

	// -(instancetype _Nonnull)initWithZone:(ZoneInfo * _Nonnull)zone;
	[Export("initWithZone:")]
	NativeHandle Constructor(ZoneInfo zone);
}

// @interface BDPointSDK_Swift_1927 (ZoneInfo) <NSCopying>
[Category]
[BaseType(typeof(ZoneInfo))]
interface ZoneInfo_BDPointSDK_Swift_1927 : INSCopying
{
	// -(id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone __attribute__((warn_unused_result("")));
	[Export("copyWithZone:")]
	unsafe NSObject CopyWithZone([NullAllowed] _NSZone* zone);
}

// @interface BDPointSDK_Swift_1932 (ZoneInfo) <JsonString>
[Category]
[BaseType(typeof(ZoneInfo))]
interface ZoneInfo_BDPointSDK_Swift_1932 : IJsonString
{
	// -(NSString * _Nullable)toJson:(NSError * _Nullable * _Nullable)error __attribute__((warn_unused_result("")));
	[Export("toJson:")]
	[return: NullAllowed]
	string ToJson([NullAllowed] out NSError error);
}

// @interface BDPointSDK_Swift_1939 (ZoneInfo)
[Category]
[BaseType(typeof(ZoneInfo))]
interface ZoneInfo_BDPointSDK_Swift_1939
{
	// -(BOOL)isEqual:(id _Nullable)object __attribute__((warn_unused_result("")));
	[Export("isEqual:")]
	bool IsEqual([NullAllowed] NSObject @object);
}

// @interface BDPointSDK_Swift_1945 (ZoneInfo) <Persistable>
[Category]
[BaseType(typeof(ZoneInfo))]
interface ZoneInfo_BDPointSDK_Swift_1945 : IPersistable
{
	// @property (readonly, copy, nonatomic) NSString * _Nonnull entityName;
	[Export("entityName")]
	string EntityName { get; }

	// @property (readonly, nonatomic, strong) NSPredicate * _Nonnull predicate;
	[Export("predicate", ArgumentSemantic.Strong)]
	NSPredicate Predicate { get; }

	// -(NSManagedObject * _Nonnull)initManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((objc_method_family("none"))) __attribute__((warn_unused_result("")));
	[Export("initManagedObjectWithContext:")]
	NSManagedObject InitManagedObjectWithContext(NSManagedObjectContext context);

	// -(MOZoneInfo * _Nonnull)createManagedObjectWithContext:(NSManagedObjectContext * _Nonnull)context __attribute__((warn_unused_result("")));
	[Export("createManagedObjectWithContext:")]
	MOZoneInfo CreateManagedObjectWithContext(NSManagedObjectContext context);
}
